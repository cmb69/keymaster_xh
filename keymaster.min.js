/**
 * Copyright (C) 2013-2023 Christoph M. Becker
 *
 * This file is part of Keymaster_XH.
 *
 * Keymaster_XH is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Keymaster_XH is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Keymaster_XH.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @type {HTMLDivElement}
 */
var warningDialog;

/**
 * @type {Text}
 */
var warningText;

/**
 * @type {Text}
 */
var buttonText;

/**
 * @type {Number}
 */
var timer;

/**
 * @type {Object}
 */
var config = JSON.parse(document.getElementsByName("keymaster_config")[0].content);

/**
 * @type {Object}
 */
var l10n = JSON.parse(document.getElementsByName("keymaster_lang")[0].content);

function initWarningDialog() {
    var button;

    warningDialog = document.getElementById("keymaster");
    warningText = warningDialog.getElementsByTagName("p")[0].firstChild;
    button = warningDialog.getElementsByTagName("button")[0];
    button.onclick = resetSession;
    buttonText = button.firstChild;
}

function showWarningDialog() {
    warningDialog.style.display = "block";
}

function hideWarningDialog() {
    warningDialog.style.display = "none";
}

function requestRemainingTime() {
    var request = new XMLHttpRequest();
    var url = "./?&keymaster_time";

    request.open("GET", url);
    request.onreadystatechange = function () {
        if (request.readyState == 4 && request.status == 200) {
            var remaining = +request.responseText;
            if (remaining != remaining) {
                clearInterval(timer);
                if (confirm(l10n.error)) {
                    open(url);
                }
            } else if (remaining < 0) {
                clearInterval(timer);
                updateWarning(remaining);
                location.href = location.href;
            } else if (remaining == 0) {
                clearInterval(timer);
                updateWarning(remaining);
                location.href = "./?&logout";
            } else if (remaining < config.warn) {
                updateWarning(remaining);
                showWarningDialog();
            } else {
                hideWarningDialog();
            }
        }
    }
    request.send(null);
}

function resetSession() {
    var request = new XMLHttpRequest();

    request.open("POST", "./");
    request.setRequestHeader("Content-Type",
            "application/x-www-form-urlencoded");
    request.send("keymaster_reset");
    hideWarningDialog();
}

/**
 * @param {Number} seconds
 */
function updateWarning(seconds) {
    var min, text;

    if (seconds > 0) {
        min = Math.ceil(seconds / 60);
        if (min == 1) {
            text = l10n.warning_singular;
        } else if (min >= 2 && min <= 4) {
            text = l10n.warning_paucal;
        } else {
            text = l10n.warning_plural;
        }
        warningText.nodeValue = text.replace(/{{{TIME}}}/, min);
    } else {
        warningText.nodeValue = l10n.warning_loggedout;
        buttonText.nodeValue = l10n.button_ok;
    }
}

addEventListener("load", function () {
    initWarningDialog();
    timer = setInterval(requestRemainingTime, config.pollInterval);
});
